{"version":3,"sources":["utils/fetchClient.ts","utils/constants.ts","api/user.api.ts","context/user.context.tsx","hooks/useUser.ts","components/UserSelector.tsx","components/Loader/Loader.tsx","components/ErrorMessage.tsx","api/post.api.ts","api/comment.api.ts","context/comment.context.tsx","context/post.context.tsx","hooks/usePost.ts","components/PostListItem.tsx","components/PostList.tsx","components/PostWidgetContent.tsx","components/PostWidget.tsx","hooks/useComment.ts","components/CommentListItem.tsx","components/CommentList.tsx","components/NewCommentForm.tsx","components/PostDetailsComments.tsx","components/PostDetails.tsx","components/PostSidebar.tsx","components/PostWrapper.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","arguments","length","undefined","data","options","body","JSON","stringify","headers","then","fetch","response","json","ApiEndpoint","client","UserContext","createContext","UserProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","selectedUser","setSelectedUser","useEffect","loadUsers","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","usersFromApi","wrap","_context","prev","next","Users","sent","stop","apply","catch","_jsx","Provider","value","onUserSelect","user","useUser","_useContext","useContext","UserSelector","_useUser","isDropdownOpen","setIsDropdownOpen","outsideClickRef","useRef","handleClickOutsideDropdown","event","dropdown","current","contains","target","document","addEventListener","removeEventListener","_jsxs","ref","className","cn","type","onClick","name","id","role","map","href","concat","handleUserSelecting","Loader","ErrorMessage","getPostsByUser","userId","PostsByUser","getCommentsByPost","postId","GetCommentsByPost","deleteCommentById","commentId","DeleteCommentById","CommentContext","CommentProvider","selectedPost","usePost","comments","setComments","commentsLoadingError","setCommentsLoadingError","_useState5","_useState6","commentsLoading","setCommentsLoading","_useState7","_useState8","isFormOpen","setIsFormOpen","loadComments","commentsFromApi","_x","removeComment","_ref3","_callee2","_context2","prevState","filter","comment","t0","_x2","addComment","_ref4","_callee3","commentBody","newComment","_context3","PostComment","_toConsumableArray","_x3","handleFormOpening","PostContext","PostProvider","posts","setPosts","postsLoadingError","setPostsLoadingError","postsLoading","setPostsLoading","setSelectedPost","loadPosts","postsFromApi","onPostClosing","useCallback","onPostSelecting","post","PostListItem","_usePost","title","PostList","PostWidgetContent","PostWidget","useComment","CommentListItem","email","CommentList","_Fragment","NewCommentForm","inputName","setInputName","inputEmail","setInputEmail","inputText","setInputText","nameError","setNameError","_useState9","_useState10","emailError","setEmailError","_useState11","_useState12","textError","setTextError","_useState13","_useState14","loading","setLoading","validate","trim","Error","handleSubmit","preventDefault","finish","onSubmit","onReset","htmlFor","placeholder","onChange","PostDetailsComments","_useComment","PostDetails","PostSidebar","PostWrapper","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.931c61c7.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum ApiEndpoint {\n  Users = '/users',\n  PostsByUser = '/posts?userId=',\n  GetCommentsByPost = '/comments?postId=',\n  DeleteCommentById = '/comments/',\n  PostComment = '/comments',\n}\n","import { client } from '../utils/fetchClient';\nimport { IUser } from '../models/IUser';\nimport { ApiEndpoint } from '../utils/constants';\n\nexport const getUsers = () => {\n  return client.get<IUser[]>(ApiEndpoint.Users);\n};\n","import React, {\n  createContext, PropsWithChildren, useEffect, useState,\n} from 'react';\nimport { IUser } from '../models/IUser';\nimport { getUsers } from '../api/user.api';\n\ninterface IUserContext {\n  selectedUser: IUser | null,\n  users: IUser[],\n  onUserSelect: (user: IUser) => void,\n}\n\nexport const UserContext = createContext<IUserContext>({} as IUserContext);\n\nexport const UserProvider:React.FC<PropsWithChildren<{}>> = ({ children }) => {\n  const [users, setUsers] = useState<IUser[]>([]);\n  const [selectedUser, setSelectedUser] = useState<IUser | null>(null);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      const usersFromApi = await getUsers();\n\n      setUsers(usersFromApi);\n    };\n\n    loadUsers()\n      .catch(() => setUsers([]));\n  }, []);\n\n  const onUserSelect = (user: IUser) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <UserContext.Provider value={{ selectedUser, users, onUserSelect }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { UserContext } from '../context/user.context';\n\nexport const useUser = () => {\n  const { users, selectedUser, onUserSelect } = useContext(UserContext);\n\n  return { users, selectedUser, onUserSelect };\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { useUser } from '../hooks/useUser';\nimport { IUser } from '../models/IUser';\n\nexport const UserSelector: React.FC = () => {\n  const { users, selectedUser, onUserSelect } = useUser();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  const outsideClickRef = useRef<HTMLDivElement | null>(null);\n\n  const handleClickOutsideDropdown = (event: MouseEvent) => {\n    const dropdown = outsideClickRef.current;\n\n    if (dropdown && !dropdown.contains(event.target as Node)) {\n      setIsDropdownOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutsideDropdown);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutsideDropdown);\n    };\n  }, []);\n\n  const handleUserSelecting = (user: IUser) => {\n    onUserSelect(user);\n\n    setIsDropdownOpen(false);\n  };\n\n  return (\n    <div\n      ref={outsideClickRef}\n      data-cy=\"UserSelector\"\n      className={cn('dropdown', {\n        'is-active': isDropdownOpen,\n      })}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n        >\n          <span>{selectedUser?.name || 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {\n            users.map(user => (\n              <a\n                key={user.id}\n                href={`#user-${user.id}`}\n                className={cn('dropdown-item', {\n                  'is-active': user.id === selectedUser?.id,\n                })}\n                onClick={() => handleUserSelecting(user)}\n              >\n                {user.name}\n              </a>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\n\nconst ErrorMessage:React.FC = () => {\n  return (\n    <div\n      className=\"notification is-danger\"\n      data-cy=\"PostsLoadingError\"\n    >\n      Something went wrong!\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","import { client } from '../utils/fetchClient';\nimport { ApiEndpoint } from '../utils/constants';\nimport { IPost } from '../models/IPost';\n\nexport const getPostsByUser = (userId: number) => {\n  return client.get<IPost[]>(ApiEndpoint.PostsByUser + userId);\n};\n","import { client } from '../utils/fetchClient';\nimport { IComment } from '../models/IComment';\nimport { ApiEndpoint } from '../utils/constants';\n\nexport const getCommentsByPost = (postId: number) => {\n  return client.get<IComment[]>(ApiEndpoint.GetCommentsByPost + postId);\n};\n\nexport const deleteCommentById = (commentId: number) => {\n  return client.delete(ApiEndpoint.DeleteCommentById + commentId);\n};\n\nexport const postComment = (body: Omit<IComment, 'id'>) => {\n  return client.post<IComment>(ApiEndpoint.PostComment, body);\n};\n","import React, {\n  createContext, PropsWithChildren, useEffect, useState,\n} from 'react';\nimport { IComment } from '../models/IComment';\nimport {\n  deleteCommentById,\n  getCommentsByPost,\n  postComment,\n} from '../api/comment.api';\n// eslint-disable-next-line import/no-cycle\nimport { usePost } from '../hooks/usePost';\n\ninterface ICommentContext {\n  comments: IComment[],\n  commentsLoadingError: boolean,\n  commentsLoading: boolean,\n  removeComment: (commentId: number) => Promise<void>,\n  isFormOpen: boolean,\n  handleFormOpening: () => void,\n  addComment: (commentBody: Omit<IComment, 'id'>) => Promise<void>,\n}\n\nexport const CommentContext = createContext<ICommentContext>(\n  {} as ICommentContext,\n);\n\nexport const CommentProvider:React.FC<PropsWithChildren<{}>> = (\n  { children },\n) => {\n  const { selectedPost } = usePost();\n  const [comments, setComments] = useState<IComment[]>([]);\n  const [commentsLoadingError, setCommentsLoadingError] = useState(false);\n  const [commentsLoading, setCommentsLoading] = useState(false);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  useEffect(() => {\n    const loadComments = async (postId: number) => {\n      setCommentsLoading(true);\n      setIsFormOpen(false);\n      const commentsFromApi = await getCommentsByPost(postId);\n\n      setCommentsLoading(false);\n\n      setComments(commentsFromApi);\n    };\n\n    if (selectedPost) {\n      loadComments(selectedPost.id)\n        .catch(() => {\n          setCommentsLoading(false);\n          setCommentsLoadingError(true);\n        });\n    }\n  }, [selectedPost]);\n\n  const removeComment = async (commentId: number) => {\n    try {\n      setComments(prevState => prevState.filter(\n        comment => comment.id !== commentId,\n      ));\n\n      await deleteCommentById(commentId);\n    } catch (error) {\n      setComments(comments);\n    }\n  };\n\n  const addComment = async (commentBody: Omit<IComment, 'id'>) => {\n    try {\n      const newComment = await postComment(commentBody);\n\n      setComments(prevState => [...prevState, newComment]);\n    } catch (error) {\n      setCommentsLoadingError(true);\n    }\n  };\n\n  const handleFormOpening = () => {\n    setIsFormOpen(true);\n  };\n\n  return (\n    <CommentContext.Provider value={{\n      comments,\n      commentsLoadingError,\n      commentsLoading,\n      removeComment,\n      isFormOpen,\n      handleFormOpening,\n      addComment,\n    }}\n    >\n      {children}\n    </CommentContext.Provider>\n  );\n};\n","import React, {\n  createContext,\n  PropsWithChildren, useCallback,\n  useEffect,\n  useState,\n} from 'react';\n// eslint-disable-next-line import/no-cycle\nimport { IPost } from '../models/IPost';\n// eslint-disable-next-line import/no-cycle\nimport { useUser } from '../hooks/useUser';\n// eslint-disable-next-line import/no-cycle\nimport { getPostsByUser } from '../api/post.api';\nimport { CommentProvider } from './comment.context';\n\ninterface IPostContext {\n  posts: IPost[],\n  postsLoadingError: boolean,\n  postsLoading: boolean,\n  selectedPost: IPost | null,\n  onPostSelecting: (post: IPost) => void,\n  onPostClosing: () => void,\n}\n\nexport const PostContext = createContext<IPostContext>({} as IPostContext);\n\nexport const PostProvider:React.FC<PropsWithChildren<{}>> = ({ children }) => {\n  const { selectedUser } = useUser();\n  const [posts, setPosts] = useState<IPost[]>([]);\n  const [postsLoadingError, setPostsLoadingError] = useState(false);\n  const [postsLoading, setPostsLoading] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<IPost | null>(null);\n\n  useEffect(() => {\n    const loadPosts = async (userId: number) => {\n      setPostsLoading(true);\n      setSelectedPost(null);\n      const postsFromApi = await getPostsByUser(userId);\n\n      setPostsLoading(false);\n\n      setPosts(postsFromApi);\n    };\n\n    if (selectedUser) {\n      loadPosts(selectedUser.id)\n        .catch(() => setPostsLoadingError(true));\n    }\n  }, [selectedUser]);\n\n  const onPostSelecting = (post: IPost) => {\n    setSelectedPost(post);\n  };\n\n  const onPostClosing = useCallback(() => {\n    setSelectedPost(null);\n  }, []);\n\n  return (\n    <PostContext.Provider value={{\n      posts,\n      postsLoadingError,\n      postsLoading,\n      selectedPost,\n      onPostSelecting,\n      onPostClosing,\n    }}\n    >\n      <CommentProvider>\n        {children}\n      </CommentProvider>\n    </PostContext.Provider>\n  );\n};\n","import { useContext } from 'react';\n// eslint-disable-next-line import/no-cycle\nimport { PostContext } from '../context/post.context';\n\nexport const usePost = () => {\n  const {\n    posts,\n    postsLoading,\n    postsLoadingError,\n    onPostClosing,\n    selectedPost,\n    onPostSelecting,\n  } = useContext(PostContext);\n\n  return {\n    posts,\n    postsLoading,\n    postsLoadingError,\n    selectedPost,\n    onPostSelecting,\n    onPostClosing,\n  };\n};\n","import React from 'react';\nimport { IPost } from '../models/IPost';\nimport { usePost } from '../hooks/usePost';\n\ntype PostListItemProps = {\n  post: IPost,\n};\n\nconst PostListItem:React.FC<PostListItemProps> = ({ post }) => {\n  const { onPostSelecting, selectedPost, onPostClosing } = usePost();\n\n  return (\n    <tr data-cy=\"Post\">\n      <td data-cy=\"PostId\">{post.id}</td>\n\n      <td data-cy=\"PostTitle\">\n        {post.title}\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        {\n          selectedPost?.id === post.id\n            ? (\n              <button\n                type=\"button\"\n                data-cy=\"PostButton\"\n                className=\"button is-link\"\n                onClick={onPostClosing}\n              >\n                Close\n              </button>\n            )\n            : (\n              <button\n                type=\"button\"\n                data-cy=\"PostButton\"\n                className=\"button is-link is-light\"\n                onClick={() => onPostSelecting(post)}\n              >\n                Open\n              </button>\n            )\n        }\n      </td>\n    </tr>\n  );\n};\n\nexport default PostListItem;\n","import React from 'react';\nimport { IPost } from '../models/IPost';\nimport PostListItem from './PostListItem';\n\ntype PostListProps = {\n  posts: IPost[],\n};\nexport const PostList: React.FC<PostListProps> = ({ posts }) => {\n  if (posts.length === 0) {\n    return (\n      <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n        No posts yet\n      </div>\n    );\n  }\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <th />\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            posts.map(post => (\n              <PostListItem post={post} key={post.id} />\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Loader } from './Loader';\nimport ErrorMessage from './ErrorMessage';\nimport { usePost } from '../hooks/usePost';\nimport { useUser } from '../hooks/useUser';\nimport { PostList } from './PostList';\n\nconst PostWidgetContent:React.FC = () => {\n  const { selectedUser } = useUser();\n  const { posts, postsLoading, postsLoadingError } = usePost();\n\n  if (!selectedUser) {\n    return (\n      <p data-cy=\"NoSelectedUser\">\n        No user selected\n      </p>\n    );\n  }\n\n  if (postsLoadingError) {\n    return (\n      <ErrorMessage />\n    );\n  }\n\n  if (postsLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <PostList posts={posts} />\n  );\n};\n\nexport default PostWidgetContent;\n\n// <p data-cy=\"NoSelectedUser\">\n//   No user selected\n// </p>\n//\n// <Loader />\n//\n// <div\n//   className=\"notification is-danger\"\n//   data-cy=\"PostsLoadingError\"\n// >\n//   Something went wrong!\n// </div>\n//\n// <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n//   No posts yet\n// </div>\n//\n// <PostsList />\n","import React from 'react';\nimport { UserSelector } from './UserSelector';\nimport PostWidgetContent from './PostWidgetContent';\n\nconst PostWidget:React.FC = () => {\n  return (\n    <div className=\"tile is-parent\">\n      <div className=\"tile is-child box is-success\">\n        <div className=\"block\">\n          <UserSelector />\n        </div>\n\n        <div className=\"block\" data-cy=\"MainContent\">\n          <PostWidgetContent />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostWidget;\n","import { useContext } from 'react';\nimport { CommentContext } from '../context/comment.context';\n\nexport const useComment = () => {\n  const {\n    comments,\n    commentsLoading,\n    commentsLoadingError,\n    removeComment,\n    isFormOpen,\n    handleFormOpening,\n    addComment,\n  } = useContext(CommentContext);\n\n  return {\n    comments,\n    commentsLoading,\n    commentsLoadingError,\n    removeComment,\n    isFormOpen,\n    handleFormOpening,\n    addComment,\n  };\n};\n","import React from 'react';\nimport { IComment } from '../models/IComment';\nimport { useComment } from '../hooks/useComment';\n\ntype CommentListItemProps = {\n  comment: IComment,\n};\n\nconst CommentListItem:React.FC<CommentListItemProps> = ({ comment }) => {\n  const { removeComment } = useComment();\n\n  return (\n    <article className=\"message is-small\" data-cy=\"Comment\">\n      <div className=\"message-header\">\n        <a href={`mailto:${comment.email}`} data-cy=\"CommentAuthor\">\n          {comment.name}\n        </a>\n        <button\n          data-cy=\"CommentDelete\"\n          type=\"button\"\n          className=\"delete is-small\"\n          aria-label=\"delete\"\n          onClick={() => removeComment(comment.id)}\n        >\n          delete button\n        </button>\n      </div>\n\n      <div className=\"message-body\" data-cy=\"CommentBody\">\n        {comment.body}\n      </div>\n    </article>\n  );\n};\n\nexport default CommentListItem;\n","import React from 'react';\nimport { IComment } from '../models/IComment';\nimport CommentListItem from './CommentListItem';\n\ntype CommentListProps = {\n  comments: IComment[],\n};\n\nconst CommentList:React.FC<CommentListProps> = ({ comments }) => {\n  if (comments.length === 0) {\n    return (\n      <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n        No comments yet\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <p className=\"title is-4\">Comments:</p>\n\n      {\n        comments.map(comment => (\n          <CommentListItem comment={comment} key={comment.id} />\n        ))\n      }\n    </>\n  );\n};\n\nexport default CommentList;\n","import React, { FormEvent, useState } from 'react';\nimport cn from 'classnames';\nimport { useComment } from '../hooks/useComment';\nimport { usePost } from '../hooks/usePost';\n\nexport const NewCommentForm: React.FC = () => {\n  const { addComment } = useComment();\n  const { selectedPost } = usePost();\n\n  const [inputName, setInputName] = useState('');\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputText, setInputText] = useState('');\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [textError, setTextError] = useState(false);\n\n  const [loading, setLoading] = useState(false);\n\n  const validate = () => {\n    if (!inputName.trim()\n      || !inputText.trim()\n      || !inputEmail.trim()\n    ) {\n      throw new Error('please fill the form correctly');\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    try {\n      setLoading(true);\n\n      if (validate() && selectedPost) {\n        await addComment({\n          name: inputName,\n          email: inputEmail,\n          postId: selectedPost?.id,\n          body: inputText,\n        });\n      }\n\n      setInputText('');\n    } catch (error) {\n      setNameError(!inputName.trim());\n      setEmailError(!inputEmail.trim());\n      setTextError(!inputText.trim());\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClear = () => {\n    setInputName('');\n    setInputEmail('');\n    setInputText('');\n\n    setNameError(false);\n    setEmailError(false);\n    setTextError(false);\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      onReset={handleClear}\n      data-cy=\"NewCommentForm\"\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={cn('input', {\n              'is-danger': nameError,\n            })}\n            value={inputName}\n            onChange={(event) => {\n              setNameError(false);\n              setInputName(event.target.value);\n            }}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {\n            nameError && (\n              <span\n                className=\"icon is-small is-right has-text-danger\"\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n            )\n          }\n        </div>\n\n        {\n          nameError && (\n            <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n              Name is required\n            </p>\n          )\n        }\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={cn('input', {\n              'is-danger': emailError,\n            })}\n            value={inputEmail}\n            onChange={(event) => {\n              setEmailError(false);\n              setInputEmail(event.target.value);\n            }}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {\n            emailError && (\n              <span\n                className=\"icon is-small is-right has-text-danger\"\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n            )\n          }\n        </div>\n\n        {\n          emailError && (\n            <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n              Email is required\n            </p>\n          )\n        }\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={cn('input', {\n              'is-danger': textError,\n            })}\n            value={inputText}\n            onChange={(event) => {\n              setTextError(false);\n              setInputText(event.target.value);\n            }}\n          />\n        </div>\n\n        {\n          textError && (\n            <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n              Enter some text\n            </p>\n          )\n        }\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={cn('button', 'is-link', {\n              'is-loading': loading,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button type=\"reset\" className=\"button is-link is-light\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Loader } from './Loader';\nimport { useComment } from '../hooks/useComment';\nimport CommentList from './CommentList';\nimport { NewCommentForm } from './NewCommentForm';\n\nconst PostDetailsComments:React.FC = () => {\n  const {\n    comments,\n    commentsLoadingError,\n    commentsLoading,\n    isFormOpen,\n    handleFormOpening,\n  } = useComment();\n\n  if (commentsLoading) {\n    return <Loader />;\n  }\n\n  if (commentsLoadingError) {\n    return (\n      <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n        Something went wrong\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <CommentList comments={comments} />\n\n      {\n        isFormOpen\n          ? (<NewCommentForm />)\n          : (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={handleFormOpening}\n            >\n              Write a comment\n            </button>\n          )\n      }\n    </>\n  );\n};\n\nexport default PostDetailsComments;\n","import React from 'react';\nimport { usePost } from '../hooks/usePost';\nimport PostDetailsComments from './PostDetailsComments';\n\nexport const PostDetails: React.FC = () => {\n  const { selectedPost } = usePost();\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${selectedPost?.id}: ${selectedPost?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {selectedPost?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          <PostDetailsComments />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { PostDetails } from './PostDetails';\nimport { usePost } from '../hooks/usePost';\n\nconst PostSidebar:React.FC = () => {\n  const { selectedPost } = usePost();\n\n  return (\n    <div\n      data-cy=\"Sidebar\"\n      className={cn(\n        'tile',\n        'is-parent',\n        'is-8-desktop',\n        'Sidebar', {\n          'Sidebar--open': selectedPost,\n        },\n      )}\n    >\n      {\n        selectedPost && (\n          <div className=\"tile is-child box is-success \">\n            <PostDetails />\n          </div>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PostSidebar;\n","import React from 'react';\nimport { UserProvider } from '../context/user.context';\nimport PostWidget from './PostWidget';\nimport { PostProvider } from '../context/post.context';\nimport PostSidebar from './PostSidebar';\n\nconst PostWrapper:React.FC = () => {\n  return (\n    <UserProvider>\n      <PostProvider>\n        <div className=\"tile is-ancestor\">\n          <PostWidget />\n\n          <PostSidebar />\n        </div>\n      </PostProvider>\n    </UserProvider>\n  );\n};\n\nexport default PostWrapper;\n","import React from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport PostWrapper from './components/PostWrapper';\n\nexport const App: React.FC = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <PostWrapper />\n      </div>\n    </main>\n  );\n};\n\n// <div className=\"tile is-ancestor\">\n//   <div className=\"tile is-parent\">\n//     <div className=\"tile is-child box is-success\">\n//       <div className=\"block\">\n//         <UserSelector />\n//       </div>\n//\n//       <div className=\"block\" data-cy=\"MainContent\">\n//         <p data-cy=\"NoSelectedUser\">\n//           No user selected\n//         </p>\n//\n//         <Loader />\n//\n//         <div\n//           className=\"notification is-danger\"\n//           data-cy=\"PostsLoadingError\"\n//         >\n//           Something went wrong!\n//         </div>\n//\n//         <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n//           No posts yet\n//         </div>\n//\n//         <PostsList />\n//       </div>\n//     </div>\n//   </div>\n//\n//   <div\n//     data-cy=\"Sidebar\"\n//     className={classNames(\n//       'tile',\n//       'is-parent',\n//       'is-8-desktop',\n//       'Sidebar',\n//       'Sidebar--open',\n//     )}\n//   >\n//     <div className=\"tile is-child box is-success \">\n//       <PostDetails />\n//     </div>\n//   </div>\n// </div>\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}